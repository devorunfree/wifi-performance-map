{"version":3,"sources":["checkbox.js","download.js","upload.js","ping.js","App.js","serviceWorker.js","index.js"],"names":["Checkbox","_ref","checkboxImage","id","label","checked","onChange","checkedImage","uncheckedImage","props","Object","objectWithoutProperties","react_default","a","createElement","src","alt","style","width","height","padding","className","assign","type","display","htmlFor","alignItems","_callee3","size","speed_count","test_result","sum","download_speed","getLoadSpeed","_getLoadSpeed","final_download_speed","_final_download_speed","_regeneratorRuntime","wrap","_context3","prev","next","asyncToGenerator","mark","_callee2","i","speed","_context2","sent","push","reduce","b","length","abrupt","stop","apply","this","arguments","_callee","loadTime","mbps","_context","Promise","resolve","reject","startTime","Date","now","image","Image","onload","endTime","onerror","err","calculateDownloadSpeed","file","fileSize","uploadSpeed","getUploadSpeed","_getUploadSpeed","final_upload_speed","_final_upload_speed","upload_regeneratorRuntime","sum2","uploadTime","File","ArrayBuffer","xhr","XMLHttpRequest","open","status","statusText","formData","FormData","append","send","calculateUploadSpeed","ping_regeneratorRuntime","fetch","then","res","catch","error","console","concat","calculatePing","time","toLocaleString","App","_useState","useState","_useState2","slicedToArray","downloadSpeed","setDownloadSpeed","_useState3","_useState4","setUploadSpeed","_useState5","_useState6","ping","setPing","_useState7","_useState8","locationLoaded","setLocationLoaded","user_up","user_down","user_ping","_useState9","latitude","longitude","zoom","_useState10","viewport","setViewport","_useState11","_useState12","lat","setLat","_useState13","_useState14","lng","setLng","_useState15","_useState16","setStatus","_useState17","_useState18","pointData","setPointData","getData","axios","get","response","data","log","getLocation","App_regeneratorRuntime","navigator","geolocation","getCurrentPosition","_ref2","position","coords","setTimeout","_x","useEffect","ping_calc","newData","upload","download","post","postData","_useState19","_useState20","selectedPoint","setselectedPoint","_useState21","_useState22","showUpload","setShowUpload","_useState23","_useState24","showDownload","setShowDownload","_useState25","_useState26","showPing","setShowPing","backgroundColor","fontSize","fontFamily","textAlign","border","margin","esm","mapboxApiAccessToken","mapStyle","onViewportChange","src_checkbox","onClick","marginLeft","marginTop","map","datapoint","key","offsetLeft","class","e","preventDefault","onClose","top","right","positionOptions","enableHighAccuracy","trackUserLocation","showUserHeading","offsetTop","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.eabcce74.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Checkbox = ({id, label, checked, onChange, checkedImage, uncheckedImage, ...props }) => {\n  let checkboxImage;\n\n  if (checked) {\n    checkboxImage = <img src={checkedImage} alt=\"Checked\" style={{width: '40px', height: '40px', padding: '5px'}} />;\n  } else {\n    checkboxImage = <img src={uncheckedImage} alt=\"Unchecked\" style={{width: '40px', height: '40px', padding: '5px'}} />;\n  }\n\n  return (\n    <div className=\"checkbox-wrapper\">\n      <input type=\"checkbox\" id={id} checked={checked}\n        onChange={() => onChange(id)} \n        {...props}\n        style={{display: \"none\"}}\n      />\n<label htmlFor={id} style={{display: 'flex', alignItems: 'center', padding: '5px', width: '40px', height: '40px'}}>\n  {checkboxImage}\n  {label}\n</label>\n\n    </div>\n  );\n};\n\n\nexport default Checkbox;\n","async function calculateDownloadSpeed() {\n\n\n  let size = 7563258 * 8;\n  const speed_count=100\n  let test_result= []\n  let sum=0\n  \n  const download_speed = () => {\n  return new Promise((resolve, reject) => {\n  let startTime = Date.now();\n  let image = new Image();\n  image.src = \"https://thawing-ocean-25554.herokuapp.com/test-file\";\n  //console.log(\"start time\", startTime);\n  \n  image.onload = function() {\n  let endTime = Date.now();\n  //console.log(\"end time\", endTime);\n  let calc = endTime - startTime;\n  resolve(calc);\n  };\n  image.onerror = function(err) {\n  reject(err);\n  };\n  });\n  };\n  \n  \n  async function getLoadSpeed() {\n  let loadTime = await download_speed();\n  if (loadTime < 1) loadTime = 1;\n  let speed_bps = size / ((loadTime)*(1/1000));\n  //console.log(speed_bps);\n  let speed_kpbs = (speed_bps) / (1000);\n  let mbps = speed_kpbs / (1000);\n  //console.log(\"MBPS\" , mbps)\n  return mbps ;\n  }\n  \n  async function final_download_speed() {\n  for (let i = 0; i < speed_count; i++) {\n  let speed = await getLoadSpeed();\n  test_result.push(speed);\n  }\n  sum = test_result.reduce((a, b) => a + b, 0);\n  sum = sum / test_result.length;\n  //console.log(sum);\n  return sum;\n  }\n  \n  return await final_download_speed();\n  }\n  \n  export default calculateDownloadSpeed;","async function calculateUploadSpeed() {\n    const file = new File([new ArrayBuffer(10485760)], 'test.txt', { type: \"text/plain\" });\n  \n    const fileSize = file.size * 8;\n  \n    const uploadSpeed = () => {\n      return new Promise((resolve, reject) => {\n        let startTime = Date.now();\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", \"https://thawing-ocean-25554.herokuapp.com/upload\", true);\n        xhr.onload = function () {\n          if (this.status >= 200 && this.status < 300) {\n            let endTime = Date.now();\n            let calc = endTime - startTime;\n            resolve(calc);\n          } else {\n            reject(this.statusText);\n          }\n        };\n        xhr.onerror = function (err) {\n          reject(err);\n        };\n        let formData = new FormData();\n        formData.append(\"file\", file);\n        //console.log(\"Sending file: \", file);\n        xhr.send(formData);\n      });\n    };\n  \n    async function getUploadSpeed() {\n      let uploadTime = await uploadSpeed();\n      //console.log(\"upload time\", uploadTime);\n      if (uploadTime < 1) uploadTime = 1;\n      let speed_bps = fileSize / ((uploadTime)*0.001);\n      let speed_kpbs = speed_bps / (1000);\n      let mbps = speed_kpbs / 1000;\n      return mbps;\n    }\n  \n    async function final_upload_speed() {\n      let speed_count = 10;\n      let test_result = [];\n      let sum2 = 0;\n      for (let i = 0; i < speed_count; i++) {\n        let speed = await getUploadSpeed();\n        test_result.push(speed);\n      }\n      sum2 = test_result.reduce((a, b) => a + b, 0);\n      sum2 = sum2 / test_result.length;\n      //console.log(sum2);\n      return sum2;\n\n    }\n  \n    return await final_upload_speed();\n  }\n  \n  export default calculateUploadSpeed;\n  ","async function calculatePing() {\n    return new Promise((resolve, reject) => {\n        const startTime = Date.now();\n        fetch(\"https://thawing-ocean-25554.herokuapp.com/ping\")\n            .then(res => {\n                const endTime = Date.now();\n                let ping_calc = endTime - startTime;\n                //console.log(`Ping: ${ping_calc}ms`);\n                resolve(ping_calc);\n            })\n            .catch(error => {\n                console.error(`Error calculating ping: ${error}`);\n                reject(error);\n            });\n    });\n}\n\nexport default calculatePing;\n","import React, { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, Popup, GeolocateControl } from \"react-map-gl\";\nimport axios from \"axios\";\nimport Checkbox from \"./checkbox.js\";\nimport calculateDownloadSpeed from \"./download.js\";\nimport calculateUploadSpeed from \"./upload.js\";\nimport calculatePing from \"./ping.js\";\n\nvar currentTime = new Date(Date.now());\nvar time = currentTime.toLocaleString();\n\n\nexport default function App() {\n\n  const [downloadSpeed, setDownloadSpeed] = useState();\n  const [uploadSpeed, setUploadSpeed] = useState();\n  const [ping, setPing] = useState();\n  const [locationLoaded, setLocationLoaded] = useState(false);\n\n\n  let user_up = uploadSpeed;\n  let user_down = downloadSpeed;\n  let user_ping = ping;\n\n  const [viewport, setViewport] = useState({\n    latitude: 28.063570,\n    longitude: -80.623040,\n    width: \"100vw\",\n    height: \"80vh\",\n    zoom: 16\n  });\n\n  const [lat, setLat] = useState();\n  const [lng, setLng] = useState();\n  const [status, setStatus] = useState(0);\n\n  const [pointData, setPointData] = useState([]);\n\n  const getData = () => {\n    axios.get(\"https://thawing-ocean-25554.herokuapp.com/\")\n      .then(response => {\n        setPointData(response.data);\n      })\n      .catch(error => {\n        console.log(\"error with getData\")\n        console.log(error);\n      });\n  }\n\n  const postData = (lat, lng, downloadSpeed, uploadSpeed, ping) => {\n    if (downloadSpeed && locationLoaded) {\n      const newData = {\n        time: time,\n        upload: uploadSpeed,\n        download: downloadSpeed,\n        ping: ping,\n        latitude: lat,\n        longitude: lng\n      };\n      axios.post(\"https://thawing-ocean-25554.herokuapp.com/\", newData)\n        .then(response => {\n          console.log('Data sent successfully:', response);\n        })\n        .catch(error => {\n          console.log(\"error with postData\")\n          console.log(error);\n        });\n    }\n  };\n\n  \n  const getLocation = async () => {\n    if (!navigator.geolocation) {\n      setStatus('Geolocation is not supported by your browser');\n    } else {\n      setStatus('Locating...');\n      navigator.geolocation.getCurrentPosition(async (position) => {\n        setStatus(null);\n        setLat(position.coords.latitude);\n        setLng(position.coords.longitude);\n        setLocationLoaded(true);\n        setTimeout(getData, 1000);\n\n      }, () => {\n        setStatus('Unable to retrieve your location');\n      });\n      \n    }\n  };\n\n  useEffect(() => {\n    calculatePing().then(ping_calc => {\n      setPing(ping_calc);\n    });\n  }, []);\n  \n  useEffect(() => {\n    calculateDownloadSpeed().then(sum => {\n      setDownloadSpeed(sum);\n    });\n  }, []);\n\n  useEffect(() => {\n    calculateUploadSpeed().then(sum2 => {\n      setUploadSpeed(sum2);\n      getLocation();\n    });\n  }, []);\n\n  useEffect(() => {\n    if (downloadSpeed && locationLoaded && uploadSpeed && ping) {\n      postData(lat, lng, downloadSpeed, uploadSpeed, ping);\n    }\n  }, [ping, uploadSpeed, downloadSpeed, locationLoaded]);\n\n\n  const [selectedPoint, setselectedPoint] = useState(null);\n\n  const [showUpload, setShowUpload] = useState(true);\n  const [showDownload, setShowDownload] = useState(true);\n  const [showPing, setShowPing] = useState(true);\n\n\n  const geolocateStyle = {\n  position: \"absolute\",\n  top: 0,\n  right: 0,\n  margin: 10\n  };\n\n\n\n  return (\n    <div>\n      <div style={{\n  display: \"block\",\n  width: \"80%\",\n  height: \"auto\",\n  backgroundColor: \"#f2f2f2\",\n  padding: \"20px\",\n  fontSize: \"20px\",\n  fontFamily: \"Arial, sans-serif\",\n  textAlign: \"center\",\n  border: \"1px solid black\",\n  margin: \"0 auto\"}}>\n\n      <h3>Current metrics</h3>\n      <p>Upload: {user_up}<br />\n      Download: {user_down}<br />\n      Ping: {user_ping}</p>\n      <p>Timestamp: {time} <br />\n      Latitude: {status} {lat} <br />\n      longitude: {lng}</p>\n      </div>\n      <ReactMapGL\n      \n        {...viewport}\n        mapboxApiAccessToken={\"pk.eyJ1IjoiZHJlc2VuZGVzIiwiYSI6ImNsYWczYnVxdDA5aXEzd21vdmlzY3lmemUifQ.szVCqwXEpk5-FpJFutAFCg\"}\n        mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n        onViewportChange={viewport=> {\n          setViewport(viewport)}}\n      >\n        <div className=\"checkboxes\">\n          <Checkbox \n            id=\"upload\" \n            label=\"Upload\" \n            checked={showUpload}\n            uncheckedImage=\"/upload_unclicked.svg\"\n            checkedImage=\"/upload_clicked.svg\"\n            onChange={(id) => setShowUpload(!showUpload)}\n          />\n          <Checkbox \n            id=\"download\" \n            label=\"Download\" \n            checked={showDownload} \n            uncheckedImage=\"/download_unclicked.svg\"\n            checkedImage=\"/download_clicked.svg\"\n            onChange={(id) => setShowDownload(!showDownload)}\n          />\n          <Checkbox \n            id=\"ping\" \n            label=\"Ping\" \n            checked={showPing} \n            uncheckedImage=\"/ping_unclicked.svg\"\n            checkedImage=\"/ping_clicked.svg\"\n            onChange={(id) => setShowPing(!showPing)}\n          />\n<button onClick={getData} style={{width: '40px', height: '40px',  padding: '5px', marginLeft: '10px', marginTop: '10px'}}>\n  <img src=\"/refresh.svg\" alt=\"refresh\" style={{width: '100%', height: '100%'}} />\n</button>\n\n        </div>\n\n\n        {pointData.map(datapoint => (\n  showUpload ? \n    <Marker \n      key={datapoint.time}\n      latitude ={datapoint.latitude}\n      longitude ={datapoint.longitude}\n      offsetLeft={-40}\n\n    >\n      <button class = \"marker-btn\" onClick={(e) =>{\n                      e.preventDefault();\n                      setselectedPoint(datapoint);\n                    }}>\n                      <img src={datapoint.upload === user_up ?  \"/upload_okay.svg\" : datapoint.upload < user_up ? \"/upload_bad.svg\" : \"/upload_good.svg\"} alt = \"upload Icon\"/>\n      </button>\n    </Marker>\n  : null\n))}\n\n{pointData.map(datapoint => (\n  showDownload ? \n    <Marker \n    key={datapoint.time}\n    latitude ={datapoint.latitude}\n    longitude ={datapoint.longitude}\n      offsetLeft={-20}\n\n    >\n      <button class = \"marker-btn\" onClick={(e) =>{\n                      e.preventDefault();\n                      setselectedPoint(datapoint);\n                    }}>\n                      <img src={datapoint.download === user_down ?  \"/download_okay.svg\" : datapoint.download < user_down ? \"/download_bad.svg\" : \"/download_good.svg\"} alt = \"download Icon\"/>\n      </button>\n    </Marker>\n  : null\n))}\n\n{pointData.map(datapoint => (\n  showPing ? \n    <Marker \n      key={datapoint.time}\n      latitude ={datapoint.latitude}\n      longitude ={datapoint.longitude}\n    >\n      <button class = \"marker-btn\" onClick={(e) =>{\n                      e.preventDefault();\n                      setselectedPoint(datapoint);\n                    }}>\n                      <img src={datapoint.ping === user_ping ?  \"/ping_okay.svg\" : datapoint.ping > user_ping ? \"/ping_bad.svg\" : \"/ping_good.svg\"} alt = \"ping Icon\"/>\n      </button>\n    </Marker>\n  : null\n))}\n        \n        {selectedPoint ? (\n          <Popup \n            latitude ={selectedPoint.latitude}\n            longitude ={selectedPoint.longitude}\n            onClose={() => {\n              setselectedPoint(null);\n            }}\n          >\n            <div>\n              <h2>{selectedPoint.time}</h2>\n              <p>{\"UPLOAD: \"}{selectedPoint.upload}</p>\n              <p>{\"DOWNLOAD: \"}{selectedPoint.download}</p>\n              <p>{\"PING: \"}{selectedPoint.ping}</p>\n\n            </div>\n          </Popup>\n\n        ): null}\n\n\n        <GeolocateControl\n          style={geolocateStyle}\n          positionOptions={{ enableHighAccuracy: true }}\n          trackUserLocation={true}\n          showUserHeading={true}\n        />\n      {lat && lng && (\n        <Marker latitude={lat} longitude={lng}\n        offsetLeft={-34}\n        offsetTop={-56}\n        >\n          <img\n            src=\"/user.svg\"\n            alt=\"User Location\"\n            style={{ height: 60, width: 60}}\n          />\n\n        </Marker>\n      )}\n      \n      </ReactMapGL>\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}